{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\OneDrive\\\\Desktop\\\\EMFinalAssessment\\\\em-final-assessment\\\\src\\\\components\\\\ListEmployeeComponent.jsx\";\nimport React, { Component } from 'react';\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport EmployeeService from '../services/EmployeeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListEmployeeComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      employees: [],\n      currentEmployee: null,\n      currentIndex: -1,\n      page: 1,\n      count: 0,\n      pageSize: 3,\n      sortBy: \"id\",\n      sortDir: \"asc\",\n      sortFirstToggle: 0,\n      sortLastToggle: true,\n      sortEmailToggle: true\n    };\n    this.addEmployee = this.addEmployee.bind(this);\n    this.editEmployee = this.editEmployee.bind(this);\n    this.deleteEmployee = this.deleteEmployee.bind(this);\n    this.retrieveTutorials = this.retrieveTutorials.bind(this); //this.refreshList = this.refreshList.bind(this);\n\n    this.setActiveTutorial = this.setActiveTutorial.bind(this); // this.removeAllTutorials = this.removeAllTutorials.bind(this);\n\n    this.handlePageChange = this.handlePageChange.bind(this);\n    this.handlePageSizeChange = this.handlePageSizeChange.bind(this);\n    this.sortFirstData = this.sortFirstData.bind(this);\n    this.sortLastData = this.sortLastData.bind(this);\n    this.sortEmailData = this.sortEmailData.bind(this);\n    this.handleSortByChange = this.handleSortByChange.bind(this);\n    this.pageSizes = [3, 6, 9];\n  }\n\n  sortFirstData() {\n    this.setState(state => ({\n      sortFirstToggle: (state.sortFirstToggle + 1) % 3,\n      sortBy: state.sortFirstToggle % 3 === 0 ? \"id\" : \"firstName\",\n      sortDir: state.sortFirstToggle % 3 === 0 ? \"asc\" : (state.sortFirstToggle + 1) % 3 === 0 ? \"asc\" : \"desc\"\n    }), () => {\n      this.retrieveTutorials();\n    });\n  }\n\n  sortLastData() {\n    this.setState(state => ({\n      sortLast: (state.sortLast + 1) % 3,\n      sortBy: state.sortLast % 3 === 0 ? \"id\" : \"firstName\",\n      sortDir: state.sortLast % 3 === 0 ? \"asc\" : (state.sortLast + 1) % 3 === 0 ? \"asc\" : \"desc\"\n    }), () => {\n      this.retrieveTutorials();\n    });\n  }\n\n  sortEmailData() {\n    this.setState(state => ({\n      sortEmailToggle: !state.sortEmailToggle,\n      sortBy: \"email\",\n      sortDir: !state.sortEmailToggle ? \"asc\" : \"desc\"\n    }), () => {\n      this.retrieveTutorials();\n    });\n  }\n\n  deleteEmployee(id) {\n    EmployeeService.deleteEmployee(id).then(res => {\n      this.setState({\n        employees: this.state.employees.filter(employee => employee.id !== id)\n      });\n    });\n  }\n\n  viewEmployee(id) {\n    this.props.history.push(`/view-employee/${id}`);\n  }\n\n  editEmployee(id) {\n    this.props.history.push(`/add-employee/${id}`);\n  }\n\n  componentDidMount() {\n    // EmployeeService.getEmployees().then((res) => {\n    //     this.setState({ employees: res.data});\n    // });\n    this.retrieveTutorials();\n  }\n\n  addEmployee() {\n    this.props.history.push('/add-employee/_add');\n  }\n\n  setActiveTutorial(employee, index) {\n    this.setState({\n      currentEmployee: employee,\n      currentIndex: index\n    });\n  }\n\n  getRequestParams(page, pageSize, sortBy, sortDir) {\n    let params = {};\n\n    if (page) {\n      params[\"page\"] = page - 1;\n    }\n\n    if (pageSize) {\n      params[\"size\"] = pageSize;\n    }\n\n    if (sortBy) {\n      params[\"sortBy\"] = sortBy;\n    }\n\n    if (sortDir) {\n      params[\"sortDir\"] = sortDir;\n    }\n\n    return params;\n  }\n\n  retrieveTutorials() {\n    const {\n      page,\n      pageSize,\n      sortBy,\n      sortDir\n    } = this.state;\n    const params = this.getRequestParams(page, pageSize, sortBy, sortDir);\n    EmployeeService.getAll(params).then(response => {\n      const {\n        employees,\n        totalPages\n      } = response.data;\n      this.setState({\n        employees: employees,\n        count: totalPages\n      });\n      console.log(this.sortFirstToggle, this.sortBy, this.sortDir);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  handlePageChange(event, value) {\n    this.setState({\n      page: value\n    }, () => {\n      this.retrieveTutorials();\n    });\n  }\n\n  handlePageSizeChange(event) {\n    this.setState({\n      pageSize: event.target.value,\n      page: 1\n    }, () => {\n      this.retrieveTutorials();\n    });\n  }\n\n  handleSortByChange() {\n    this.setState({\n      sortBy: \"firstName\",\n      sortDir: this.state.sortDir\n    }, () => {\n      this.retrieveTutorials();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Employees List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.addEmployee,\n          children: \" Add Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: \"10px\"\n          },\n          className: \"btn btn-info\",\n          onClick: this.sortFirstData,\n          children: \" sort according to FirstName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: \"10px\"\n          },\n          className: \"btn btn-info\",\n          onClick: this.sortLastData,\n          children: \" sort according to  LastName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: \"10px\"\n          },\n          className: \"btn btn-info\",\n          onClick: this.sortEmailData,\n          children: \" sort according to EmailName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Employee First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Employee Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Employee Email Id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.employees.map((employee, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: index === this.state.currentIndex ? \"active\" : \"\",\n              onClick: () => this.setActiveTutorial(employee, index),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", employee.firstName, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", employee.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", employee.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.editEmployee(employee.id),\n                  className: \"btn btn-info\",\n                  children: \"Update \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 50\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    marginLeft: \"10px\"\n                  },\n                  onClick: () => this.deleteEmployee(employee.id),\n                  className: \"btn btn-danger\",\n                  children: \"Delete \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 50\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    marginLeft: \"10px\"\n                  },\n                  onClick: () => this.viewEmployee(employee.id),\n                  className: \"btn btn-info\",\n                  children: \"View \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 50\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 46\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            className: \"my-3\",\n            count: this.state.count,\n            page: this.state.page,\n            siblingCount: 1,\n            boundaryCount: 1,\n            variant: \"outlined\",\n            shape: \"rounded\",\n            onChange: this.handlePageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListEmployeeComponent;","map":{"version":3,"sources":["C:/Users/adity/OneDrive/Desktop/EMFinalAssessment/em-final-assessment/src/components/ListEmployeeComponent.jsx"],"names":["React","Component","Pagination","EmployeeService","ListEmployeeComponent","constructor","props","state","employees","currentEmployee","currentIndex","page","count","pageSize","sortBy","sortDir","sortFirstToggle","sortLastToggle","sortEmailToggle","addEmployee","bind","editEmployee","deleteEmployee","retrieveTutorials","setActiveTutorial","handlePageChange","handlePageSizeChange","sortFirstData","sortLastData","sortEmailData","handleSortByChange","pageSizes","setState","sortLast","id","then","res","filter","employee","viewEmployee","history","push","componentDidMount","index","getRequestParams","params","getAll","response","totalPages","data","console","log","catch","e","event","value","target","render","marginLeft","map","firstName","lastName","email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport EmployeeService from '../services/EmployeeService';\r\n\r\nclass ListEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                employees: [],\r\n                currentEmployee: null,\r\n                currentIndex: -1,\r\n\r\n                page: 1,\r\n                count: 0,\r\n                pageSize: 3,\r\n                sortBy:\"id\",\r\n                sortDir:\"asc\",\r\n                sortFirstToggle:0,\r\n                sortLastToggle:true,\r\n                sortEmailToggle:true,\r\n        }\r\n        this.addEmployee = this.addEmployee.bind(this);\r\n        this.editEmployee = this.editEmployee.bind(this);\r\n        this.deleteEmployee = this.deleteEmployee.bind(this);\r\n        this.retrieveTutorials = this.retrieveTutorials.bind(this);\r\n        //this.refreshList = this.refreshList.bind(this);\r\n        this.setActiveTutorial = this.setActiveTutorial.bind(this);\r\n        // this.removeAllTutorials = this.removeAllTutorials.bind(this);\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n        this.handlePageSizeChange = this.handlePageSizeChange.bind(this);\r\n        this.sortFirstData = this.sortFirstData.bind(this);\r\n        this.sortLastData = this.sortLastData.bind(this);\r\n        this.sortEmailData = this.sortEmailData.bind(this);\r\n        this.handleSortByChange = this.handleSortByChange.bind(this);\r\n        \r\n        this.pageSizes = [3, 6, 9];\r\n    }\r\n\r\n    sortFirstData() {\r\n      this.setState(state=>({\r\n        sortFirstToggle:(state.sortFirstToggle+1)%3,\r\n        sortBy:(state.sortFirstToggle)%3===0?\"id\":\"firstName\",\r\n        sortDir: (state.sortFirstToggle)%3===0?\"asc\":((state.sortFirstToggle+1)%3===0?\"asc\":\"desc\")\r\n        \r\n      }),\r\n      () => {\r\n        \r\n        this.retrieveTutorials();\r\n      }\r\n      );\r\n    }\r\n\r\n    sortLastData() {\r\n      this.setState(state=>({\r\n        sortLast:(state.sortLast+1)%3,\r\n        sortBy:(state.sortLast)%3===0?\"id\":\"firstName\",\r\n        sortDir: (state.sortLast)%3===0?\"asc\":((state.sortLast+1)%3===0?\"asc\":\"desc\")\r\n      }),\r\n      () => {\r\n        this.retrieveTutorials();\r\n      }\r\n      );\r\n    }\r\n\r\n    sortEmailData() {\r\n      this.setState(state=>({\r\n        sortEmailToggle:!state.sortEmailToggle,\r\n        sortBy:\"email\",\r\n        sortDir: !state.sortEmailToggle?\"asc\":\"desc\"\r\n      }),\r\n      () => {\r\n        this.retrieveTutorials();\r\n      }\r\n      );\r\n    }\r\n\r\n\r\n    deleteEmployee(id){\r\n        EmployeeService.deleteEmployee(id).then( res => {\r\n            this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\r\n        });\r\n    }\r\n    viewEmployee(id){\r\n        this.props.history.push(`/view-employee/${id}`);\r\n    }\r\n    editEmployee(id){\r\n        this.props.history.push(`/add-employee/${id}`);\r\n    }\r\n\r\n    componentDidMount(){\r\n        // EmployeeService.getEmployees().then((res) => {\r\n        //     this.setState({ employees: res.data});\r\n        // });\r\n        this.retrieveTutorials();\r\n    }\r\n\r\n    addEmployee(){\r\n        this.props.history.push('/add-employee/_add');\r\n    }\r\n\r\n    setActiveTutorial(employee, index) {\r\n        this.setState({\r\n            currentEmployee: employee,\r\n          currentIndex: index,\r\n        });\r\n      }\r\n\r\n    getRequestParams(page, pageSize, sortBy,sortDir) {\r\n        let params = {};\r\n    \r\n        if (page) {\r\n          params[\"page\"] = page - 1;\r\n        }\r\n    \r\n        if (pageSize) {\r\n          params[\"size\"] = pageSize;\r\n        }\r\n\r\n        if (sortBy) {\r\n          params[\"sortBy\"] = sortBy;\r\n        }\r\n\r\n        \r\n        if (sortDir) {\r\n          params[\"sortDir\"] = sortDir;\r\n        }\r\n        \r\n        return params;\r\n      }\r\n    \r\n      retrieveTutorials() {\r\n        const { page, pageSize, sortBy, sortDir } = this.state;\r\n        const params = this.getRequestParams(page, pageSize,sortBy, sortDir);\r\n    \r\n        EmployeeService.getAll(params)\r\n          .then((response) => {\r\n            const { employees, totalPages } = response.data;\r\n    \r\n            this.setState({\r\n              employees: employees,\r\n              count: totalPages,\r\n            });\r\n            console.log(this.sortFirstToggle,this.sortBy,this.sortDir)\r\n            console.log(response.data);\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n          });\r\n      }\r\n    \r\n      handlePageChange(event, value) {\r\n        this.setState(\r\n          {\r\n            page: value,\r\n          },\r\n          () => {\r\n            this.retrieveTutorials();\r\n          }\r\n        );\r\n      }\r\n    \r\n      handlePageSizeChange(event) {\r\n        this.setState(\r\n          {\r\n            pageSize: event.target.value,\r\n            page: 1\r\n          },\r\n          () => {\r\n            this.retrieveTutorials();\r\n          }\r\n        );\r\n      }\r\n\r\n      handleSortByChange() {\r\n        this.setState(\r\n          {\r\n\r\n            sortBy:\"firstName\",\r\n            sortDir: this.state.sortDir\r\n          },\r\n          () => {\r\n            this.retrieveTutorials();\r\n          }\r\n        );\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <h2 className=\"text-center\">Employees List</h2>\r\n                 <div className = \"row-3\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addEmployee}> Add Employee</button>\r\n                    <button style={{marginLeft: \"10px\"}} className=\"btn btn-info\" onClick={this.sortFirstData}> sort according to FirstName</button>\r\n                    <button style={{marginLeft: \"10px\"}} className=\"btn btn-info\" onClick={this.sortLastData}> sort according to  LastName</button>\r\n                    <button style={{marginLeft: \"10px\"}} className=\"btn btn-info\" onClick={this.sortEmailData}> sort according to EmailName</button>\r\n                 </div>\r\n                 <br></br>\r\n                 <div className = \"row\">\r\n                        <table className = \"table table-striped table-bordered\">\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> Employee First Name</th>\r\n                                    <th> Employee Last Name</th>\r\n                                    <th> Employee Email Id</th>\r\n                                    <th> Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.employees.map(\r\n                                        (employee, index) => \r\n                                        <tr key = {index}\r\n                                            className={\r\n                                            (index === this.state.currentIndex ? \"active\" : \"\")\r\n                                          }\r\n                                          onClick={() => this.setActiveTutorial(employee, index)}\r\n                                        >\r\n                                             <td> {employee.firstName} </td>   \r\n                                             <td> {employee.lastName}</td>\r\n                                             <td> {employee.email}</td>\r\n                                             <td>\r\n                                                 <button onClick={ () => this.editEmployee(employee.id)} className=\"btn btn-info\">Update </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteEmployee(employee.id)} className=\"btn btn-danger\">Delete </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewEmployee(employee.id)} className=\"btn btn-info\">View </button>\r\n                                             </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                            <Pagination\r\n                                className=\"my-3\"\r\n                                count={this.state.count}\r\n                                page={this.state.page}\r\n                                siblingCount={1}\r\n                                boundaryCount={1}\r\n                                variant=\"outlined\"\r\n                                shape=\"rounded\"\r\n                                onChange={this.handlePageChange}\r\n                                />\r\n                        </table>\r\n\r\n                 </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListEmployeeComponent"]},"metadata":{},"sourceType":"module"}