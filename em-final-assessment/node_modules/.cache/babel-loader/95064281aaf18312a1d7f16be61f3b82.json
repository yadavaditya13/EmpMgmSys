{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\OneDrive\\\\Desktop\\\\EMFinalAssessment\\\\em-final-assessment\\\\src\\\\components\\\\ListEmployeeComponent.jsx\";\nimport React, { Component } from 'react';\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport EmployeeService from '../services/EmployeeService';\nimport \"../assets/css/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListEmployeeComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      employees: [],\n      currentEmployee: null,\n      currentIndex: -1,\n      page: 1,\n      count: 0,\n      pageSize: 3,\n      sortBy: \"id\",\n      sortDir: \"asc\",\n      sortLastTog: true,\n      sortEmailTog: true,\n      sortFirstToggle: 0,\n      sortFirstTog: true,\n      sortLastToggle: 0,\n      sortEmailToggle: 0\n    };\n    this.addEmployee = this.addEmployee.bind(this);\n    this.editEmployee = this.editEmployee.bind(this);\n    this.deleteEmployee = this.deleteEmployee.bind(this);\n    this.retrieveTutorials = this.retrieveTutorials.bind(this); //this.refreshList = this.refreshList.bind(this);\n\n    this.setActiveTutorial = this.setActiveTutorial.bind(this); // this.removeAllTutorials = this.removeAllTutorials.bind(this);\n\n    this.handlePageChange = this.handlePageChange.bind(this);\n    this.handlePageSizeChange = this.handlePageSizeChange.bind(this);\n    this.sortFirstData = this.sortFirstData.bind(this);\n    this.sortLastData = this.sortLastData.bind(this);\n    this.sortEmailData = this.sortEmailData.bind(this);\n    this.handleSortByChange = this.handleSortByChange.bind(this);\n    this.pageSizes = [3, 6, 9];\n  }\n\n  sortFirstData() {\n    this.setState(state => ({\n      sortFirstToggle: (state.sortFirstToggle + 1) % 3,\n      sortBy: state.sortFirstToggle % 3 === 0 ? \"id\" : \"firstName\",\n      sortDir: state.sortFirstToggle % 3 === 0 ? \"asc\" : state.sortFirstTog ? \"asc\" : \"desc\",\n      sortFirstTog: !state.sortFirstTog\n    }), () => {\n      this.retrieveTutorials();\n    });\n  }\n\n  sortLastData() {\n    this.setState(state => ({\n      sortLastToggle: (state.sortLastToggle + 1) % 3,\n      sortBy: state.sortLastToggle % 3 === 0 ? \"id\" : \"lastName\",\n      sortDir: state.sortLastToggle % 3 === 0 ? \"asc\" : state.sortLastTog ? \"asc\" : \"desc\",\n      sortLastData: !state.this.sortLastData\n    }), () => {\n      this.retrieveTutorials();\n    });\n  }\n\n  sortEmailData() {\n    this.setState(state => ({\n      sortEmailToggle: (state.sortEmailToggle + 1) % 3,\n      sortBy: state.sortEmailToggle % 3 === 0 ? \"id\" : \"email\",\n      sortDir: state.sortEmailToggle % 3 === 0 ? \"asc\" : state.sortEmailTog ? \"asc\" : \"desc\"\n    }), () => {\n      this.retrieveTutorials();\n    });\n  }\n\n  deleteEmployee(id) {\n    EmployeeService.deleteEmployee(id).then(res => {\n      this.setState({\n        employees: this.state.employees.filter(employee => employee.id !== id)\n      });\n    });\n  }\n\n  viewEmployee(id) {\n    this.props.history.push(`/view-employee/${id}`);\n  }\n\n  editEmployee(id) {\n    this.props.history.push(`/add-employee/${id}`);\n  }\n\n  componentDidMount() {\n    // EmployeeService.getEmployees().then((res) => {\n    //     this.setState({ employees: res.data});\n    // });\n    this.retrieveTutorials();\n  }\n\n  addEmployee() {\n    this.props.history.push('/add-employee/_add');\n  }\n\n  setActiveTutorial(employee, index) {\n    this.setState({\n      currentEmployee: employee,\n      currentIndex: index\n    });\n  }\n\n  getRequestParams(page, pageSize, sortBy, sortDir) {\n    let params = {};\n\n    if (page) {\n      params[\"page\"] = page - 1;\n    }\n\n    if (pageSize) {\n      params[\"size\"] = pageSize;\n    }\n\n    if (sortBy) {\n      params[\"sortBy\"] = sortBy;\n    }\n\n    if (sortDir) {\n      params[\"sortDir\"] = sortDir;\n    }\n\n    return params;\n  }\n\n  retrieveTutorials() {\n    const {\n      page,\n      pageSize,\n      sortBy,\n      sortDir\n    } = this.state;\n    const params = this.getRequestParams(page, pageSize, sortBy, sortDir);\n    EmployeeService.getAll(params).then(response => {\n      const {\n        employees,\n        totalPages\n      } = response.data;\n      this.setState({\n        employees: employees,\n        count: totalPages\n      });\n      console.log(this.sortFirstToggle, this.sortBy, this.sortDir);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  handlePageChange(event, value) {\n    this.setState({\n      page: value\n    }, () => {\n      this.retrieveTutorials();\n    });\n  }\n\n  handlePageSizeChange(event) {\n    this.setState({\n      pageSize: event.target.value,\n      page: 1\n    }, () => {\n      this.retrieveTutorials();\n    });\n  }\n\n  handleSortByChange() {\n    this.setState({\n      sortBy: \"firstName\",\n      sortDir: this.state.sortDir\n    }, () => {\n      this.retrieveTutorials();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Employees List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.addEmployee,\n          children: \" Add Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: \"10px\"\n          },\n          className: \"btn btn-info\",\n          onClick: this.sortFirstData,\n          children: [\" sort according to FirstName\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.state.sortFirstToggle === 1 ? \"\" : this.state.sortFirstDir === \"asc\" ? \"arrow arrow-up\" : \"arrow arrow-down\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 140\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: \"10px\"\n          },\n          className: \"btn btn-info\",\n          onClick: this.sortLastData,\n          children: [\" sort according to  LastName\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.state.sortLastToggle === 1 ? \"\" : this.state.sortLastDir === \"asc\" ? \"arrow arrow-up\" : \"arrow arrow-down\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 139\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: \"10px\"\n          },\n          className: \"btn btn-info\",\n          onClick: this.sortEmailData,\n          children: [\" sort according to EmailName\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.state.sortEmailToggle === 1 ? \"\" : this.state.sortEmailDir === \"asc\" ? \"arrow arrow-up\" : \"arrow arrow-down\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 140\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Employee First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Employee Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Employee Email Id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.employees.map((employee, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: index === this.state.currentIndex ? \"active\" : \"\",\n              onClick: () => this.setActiveTutorial(employee, index),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", employee.firstName, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", employee.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", employee.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.editEmployee(employee.id),\n                  className: \"btn btn-info\",\n                  children: \"Update \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 50\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    marginLeft: \"10px\"\n                  },\n                  onClick: () => this.deleteEmployee(employee.id),\n                  className: \"btn btn-danger\",\n                  children: \"Delete \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 50\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    marginLeft: \"10px\"\n                  },\n                  onClick: () => this.viewEmployee(employee.id),\n                  className: \"btn btn-info\",\n                  children: \"View \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 50\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 46\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            className: \"my-3\",\n            count: this.state.count,\n            page: this.state.page,\n            siblingCount: 1,\n            boundaryCount: 1,\n            variant: \"outlined\",\n            shape: \"rounded\",\n            onChange: this.handlePageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListEmployeeComponent;","map":{"version":3,"sources":["C:/Users/adity/OneDrive/Desktop/EMFinalAssessment/em-final-assessment/src/components/ListEmployeeComponent.jsx"],"names":["React","Component","Pagination","EmployeeService","ListEmployeeComponent","constructor","props","state","employees","currentEmployee","currentIndex","page","count","pageSize","sortBy","sortDir","sortLastTog","sortEmailTog","sortFirstToggle","sortFirstTog","sortLastToggle","sortEmailToggle","addEmployee","bind","editEmployee","deleteEmployee","retrieveTutorials","setActiveTutorial","handlePageChange","handlePageSizeChange","sortFirstData","sortLastData","sortEmailData","handleSortByChange","pageSizes","setState","this","id","then","res","filter","employee","viewEmployee","history","push","componentDidMount","index","getRequestParams","params","getAll","response","totalPages","data","console","log","catch","e","event","value","target","render","marginLeft","sortFirstDir","sortLastDir","sortEmailDir","map","firstName","lastName","email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport EmployeeService from '../services/EmployeeService';\r\nimport \"../assets/css/styles.css\";\r\nclass ListEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                employees: [],\r\n                currentEmployee: null,\r\n                currentIndex: -1,\r\n\r\n                page: 1,\r\n                count: 0,\r\n                pageSize: 3,\r\n                sortBy:\"id\",\r\n                sortDir:\"asc\",\r\n                sortLastTog:true,\r\n                sortEmailTog:true,\r\n                sortFirstToggle:0,\r\n                sortFirstTog:true,\r\n                sortLastToggle:0,\r\n                sortEmailToggle:0,\r\n        }\r\n        this.addEmployee = this.addEmployee.bind(this);\r\n        this.editEmployee = this.editEmployee.bind(this);\r\n        this.deleteEmployee = this.deleteEmployee.bind(this);\r\n        this.retrieveTutorials = this.retrieveTutorials.bind(this);\r\n        //this.refreshList = this.refreshList.bind(this);\r\n        this.setActiveTutorial = this.setActiveTutorial.bind(this);\r\n        // this.removeAllTutorials = this.removeAllTutorials.bind(this);\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n        this.handlePageSizeChange = this.handlePageSizeChange.bind(this);\r\n        this.sortFirstData = this.sortFirstData.bind(this);\r\n        this.sortLastData = this.sortLastData.bind(this);\r\n        this.sortEmailData = this.sortEmailData.bind(this);\r\n        this.handleSortByChange = this.handleSortByChange.bind(this);\r\n        \r\n        this.pageSizes = [3, 6, 9];\r\n    }\r\n\r\n    sortFirstData() {\r\n      this.setState(state=>({\r\n        sortFirstToggle:(state.sortFirstToggle+1)%3,\r\n        sortBy:(state.sortFirstToggle)%3===0?\"id\":\"firstName\",\r\n        sortDir: (state.sortFirstToggle)%3===0?\"asc\":(state.sortFirstTog?\"asc\":\"desc\"),\r\n        sortFirstTog:!state.sortFirstTog\r\n      }),\r\n      () => {\r\n        \r\n        this.retrieveTutorials();\r\n      }\r\n      );\r\n    }\r\n\r\n    sortLastData() {\r\n      this.setState(state=>({\r\n        sortLastToggle:(state.sortLastToggle+1)%3,\r\n        sortBy:(state.sortLastToggle)%3===0?\"id\":\"lastName\",\r\n        sortDir: (state.sortLastToggle)%3===0?\"asc\":(state.sortLastTog?\"asc\":\"desc\"),\r\n        sortLastData:!state.this.sortLastData\r\n      }),\r\n      () => {\r\n        this.retrieveTutorials();\r\n      }\r\n      );\r\n    }\r\n\r\n    sortEmailData() {\r\n      this.setState(state=>({\r\n        sortEmailToggle:(state.sortEmailToggle+1)%3,\r\n        sortBy:(state.sortEmailToggle)%3===0?\"id\":\"email\",\r\n        sortDir: (state.sortEmailToggle)%3===0?\"asc\":(state.sortEmailTog?\"asc\":\"desc\")\r\n      }),\r\n      () => {\r\n        this.retrieveTutorials();\r\n      }\r\n      );\r\n    }\r\n\r\n\r\n    deleteEmployee(id){\r\n        EmployeeService.deleteEmployee(id).then( res => {\r\n            this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\r\n        });\r\n    }\r\n    viewEmployee(id){\r\n        this.props.history.push(`/view-employee/${id}`);\r\n    }\r\n    editEmployee(id){\r\n        this.props.history.push(`/add-employee/${id}`);\r\n    }\r\n\r\n    componentDidMount(){\r\n        // EmployeeService.getEmployees().then((res) => {\r\n        //     this.setState({ employees: res.data});\r\n        // });\r\n        this.retrieveTutorials();\r\n    }\r\n\r\n    addEmployee(){\r\n        this.props.history.push('/add-employee/_add');\r\n    }\r\n\r\n    setActiveTutorial(employee, index) {\r\n        this.setState({\r\n            currentEmployee: employee,\r\n          currentIndex: index,\r\n        });\r\n      }\r\n\r\n    getRequestParams(page, pageSize, sortBy,sortDir) {\r\n        let params = {};\r\n    \r\n        if (page) {\r\n          params[\"page\"] = page - 1;\r\n        }\r\n    \r\n        if (pageSize) {\r\n          params[\"size\"] = pageSize;\r\n        }\r\n\r\n        if (sortBy) {\r\n          params[\"sortBy\"] = sortBy;\r\n        }\r\n\r\n        \r\n        if (sortDir) {\r\n          params[\"sortDir\"] = sortDir;\r\n        }\r\n        \r\n        return params;\r\n      }\r\n    \r\n      retrieveTutorials() {\r\n        const { page, pageSize, sortBy, sortDir } = this.state;\r\n        const params = this.getRequestParams(page, pageSize,sortBy, sortDir);\r\n    \r\n        EmployeeService.getAll(params)\r\n          .then((response) => {\r\n            const { employees, totalPages } = response.data;\r\n    \r\n            this.setState({\r\n              employees: employees,\r\n              count: totalPages,\r\n            });\r\n            console.log(this.sortFirstToggle,this.sortBy,this.sortDir)\r\n            console.log(response.data);\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n          });\r\n      }\r\n    \r\n      handlePageChange(event, value) {\r\n        this.setState(\r\n          {\r\n            page: value,\r\n          },\r\n          () => {\r\n            this.retrieveTutorials();\r\n          }\r\n        );\r\n      }\r\n    \r\n      handlePageSizeChange(event) {\r\n        this.setState(\r\n          {\r\n            pageSize: event.target.value,\r\n            page: 1\r\n          },\r\n          () => {\r\n            this.retrieveTutorials();\r\n          }\r\n        );\r\n      }\r\n\r\n      handleSortByChange() {\r\n        this.setState(\r\n          {\r\n\r\n            sortBy:\"firstName\",\r\n            sortDir: this.state.sortDir\r\n          },\r\n          () => {\r\n            this.retrieveTutorials();\r\n          }\r\n        );\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <h2 className=\"text-center\">Employees List</h2>\r\n                 <div className = \"row-3\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addEmployee}> Add Employee</button>\r\n                    <button style={{marginLeft: \"10px\"}} className=\"btn btn-info\" onClick={this.sortFirstData}> sort according to FirstName<div\r\n                      className={\r\n                        this.state.sortFirstToggle===1? \"\":\r\n                        (this.state.sortFirstDir === \"asc\" \r\n                          ? \"arrow arrow-up\"\r\n                          : \"arrow arrow-down\")\r\n                      }\r\n                    >\r\n                      {\" \"}\r\n                    </div></button>\r\n                    <button style={{marginLeft: \"10px\"}} className=\"btn btn-info\" onClick={this.sortLastData}> sort according to  LastName<div\r\n                      className={\r\n                        this.state.sortLastToggle===1? \"\":\r\n                        (this.state.sortLastDir === \"asc\" \r\n                          ? \"arrow arrow-up\"\r\n                          : \"arrow arrow-down\")\r\n                      }\r\n                    >\r\n                      {\" \"}\r\n                    </div></button>\r\n                    <button style={{marginLeft: \"10px\"}} className=\"btn btn-info\" onClick={this.sortEmailData}> sort according to EmailName<div\r\n                      className={\r\n                        this.state.sortEmailToggle===1? \"\":\r\n                        (this.state.sortEmailDir === \"asc\" \r\n                          ? \"arrow arrow-up\"\r\n                          : \"arrow arrow-down\")\r\n                      }\r\n                    >\r\n                      {\" \"}\r\n                    </div></button>\r\n                 </div>\r\n                 <br></br>\r\n                 <div className = \"row\">\r\n                        <table className = \"table table-striped table-bordered\">\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> Employee First Name</th>\r\n                                    <th> Employee Last Name</th>\r\n                                    <th> Employee Email Id</th>\r\n                                    <th> Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.employees.map(\r\n                                        (employee, index) => \r\n                                        <tr key = {index}\r\n                                            className={\r\n                                            (index === this.state.currentIndex ? \"active\" : \"\")\r\n                                          }\r\n                                          onClick={() => this.setActiveTutorial(employee, index)}\r\n                                        >\r\n                                             <td> {employee.firstName} </td>   \r\n                                             <td> {employee.lastName}</td>\r\n                                             <td> {employee.email}</td>\r\n                                             <td>\r\n                                                 <button onClick={ () => this.editEmployee(employee.id)} className=\"btn btn-info\">Update </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteEmployee(employee.id)} className=\"btn btn-danger\">Delete </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewEmployee(employee.id)} className=\"btn btn-info\">View </button>\r\n                                             </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                            <Pagination\r\n                                className=\"my-3\"\r\n                                count={this.state.count}\r\n                                page={this.state.page}\r\n                                siblingCount={1}\r\n                                boundaryCount={1}\r\n                                variant=\"outlined\"\r\n                                shape=\"rounded\"\r\n                                onChange={this.handlePageChange}\r\n                                />\r\n                        </table>\r\n\r\n                 </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListEmployeeComponent"]},"metadata":{},"sourceType":"module"}